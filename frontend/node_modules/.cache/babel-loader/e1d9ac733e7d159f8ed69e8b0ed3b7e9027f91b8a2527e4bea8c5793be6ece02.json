{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\E-web\\\\frontend\\\\src\\\\components\\\\Admin\\\\OrderTable.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport { clearErrors, deleteOrder, getAllOrders } from '../../actions/orderAction';\nimport { DELETE_ORDER_RESET } from '../../constants/orderConstants';\nimport Actions from './Actions';\nimport { formatDate } from '../../utils/functions';\nimport MetaData from '../Layouts/MetaData';\nimport BackdropLoader from '../Layouts/BackdropLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OrderTable = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    orders,\n    error\n  } = useSelector(state => state.allOrders);\n  const {\n    loading,\n    isDeleted,\n    error: deleteError\n  } = useSelector(state => state.order);\n  useEffect(() => {\n    if (error) {\n      enqueueSnackbar(error, {\n        variant: \"error\"\n      });\n      dispatch(clearErrors());\n    }\n    if (deleteError) {\n      enqueueSnackbar(deleteError, {\n        variant: \"error\"\n      });\n      dispatch(clearErrors());\n    }\n    if (isDeleted) {\n      enqueueSnackbar(\"Deleted Successfully\", {\n        variant: \"success\"\n      });\n      dispatch({\n        type: DELETE_ORDER_RESET\n      });\n    }\n    dispatch(getAllOrders());\n  }, [dispatch, error, deleteError, isDeleted, enqueueSnackbar]);\n  const deleteOrderHandler = id => {\n    dispatch(deleteOrder(id));\n  };\n  const columns = [{\n    field: \"id\",\n    headerName: \"Order ID\",\n    minWidth: 200,\n    flex: 1\n  }, {\n    field: \"status\",\n    headerName: \"Status\",\n    minWidth: 150,\n    flex: 0.2,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: params.row.status === \"Delivered\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm bg-green-100 p-1 px-2 font-medium rounded-full text-green-800\",\n          children: params.row.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 33\n        }, this) : params.row.status === \"Shipped\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm bg-yellow-100 p-1 px-2 font-medium rounded-full text-yellow-800\",\n          children: params.row.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm bg-purple-100 p-1 px-2 font-medium rounded-full text-purple-800\",\n          children: params.row.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 33\n        }, this)\n      }, void 0, false);\n    }\n  }, {\n    field: \"itemsQty\",\n    headerName: \"Items Qty\",\n    type: \"number\",\n    minWidth: 100,\n    flex: 0.1\n  }, {\n    field: \"amount\",\n    headerName: \"Amount\",\n    type: \"number\",\n    minWidth: 200,\n    flex: 0.2,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\u20B9\", params.row.amount.toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this);\n    }\n  }, {\n    field: \"orderOn\",\n    headerName: \"Order On\",\n    type: \"date\",\n    minWidth: 200,\n    flex: 0.5\n  }, {\n    field: \"actions\",\n    headerName: \"Actions\",\n    minWidth: 100,\n    flex: 0.3,\n    type: \"number\",\n    sortable: false,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(Actions, {\n        editRoute: \"order\",\n        deleteHandler: deleteOrderHandler,\n        id: params.row.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this);\n    }\n  }];\n  const rows = [];\n  orders && orders.forEach(order => {\n    rows.unshift({\n      id: order._id,\n      itemsQty: order.orderItems.length,\n      amount: order.totalPrice,\n      orderOn: formatDate(order.createdAt),\n      status: order.orderStatus\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: \"Admin Orders | Flipkart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(BackdropLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-lg font-medium uppercase\",\n      children: \"orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-xl shadow-lg w-full\",\n      style: {\n        height: 470\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        pageSize: 10,\n        disableSelectIconOnClick: true,\n        sx: {\n          boxShadow: 0,\n          border: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(OrderTable, \"ySXHmPgxovoU+UBv004AUbJvqcA=\", false, function () {\n  return [useDispatch, useSnackbar, useSelector, useSelector];\n});\n_c = OrderTable;\nexport default OrderTable;\nvar _c;\n$RefreshReg$(_c, \"OrderTable\");","map":{"version":3,"names":["useEffect","DataGrid","useDispatch","useSelector","useSnackbar","clearErrors","deleteOrder","getAllOrders","DELETE_ORDER_RESET","Actions","formatDate","MetaData","BackdropLoader","jsxDEV","_jsxDEV","Fragment","_Fragment","OrderTable","_s","dispatch","enqueueSnackbar","orders","error","state","allOrders","loading","isDeleted","deleteError","order","variant","type","deleteOrderHandler","id","columns","field","headerName","minWidth","flex","renderCell","params","children","row","status","className","fileName","_jsxFileName","lineNumber","columnNumber","amount","toLocaleString","sortable","editRoute","deleteHandler","rows","forEach","unshift","_id","itemsQty","orderItems","length","totalPrice","orderOn","createdAt","orderStatus","title","style","height","pageSize","disableSelectIconOnClick","sx","boxShadow","border","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/E-web/frontend/src/components/Admin/OrderTable.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport { clearErrors, deleteOrder, getAllOrders } from '../../actions/orderAction';\nimport { DELETE_ORDER_RESET } from '../../constants/orderConstants';\nimport Actions from './Actions';\nimport { formatDate } from '../../utils/functions';\nimport MetaData from '../Layouts/MetaData';\nimport BackdropLoader from '../Layouts/BackdropLoader';\n\nconst OrderTable = () => {\n\n    const dispatch = useDispatch();\n    const { enqueueSnackbar } = useSnackbar();\n\n    const { orders, error } = useSelector((state) => state.allOrders);\n    const { loading, isDeleted, error: deleteError } = useSelector((state) => state.order);\n\n    useEffect(() => {\n        if (error) {\n            enqueueSnackbar(error, { variant: \"error\" });\n            dispatch(clearErrors());\n        }\n        if (deleteError) {\n            enqueueSnackbar(deleteError, { variant: \"error\" });\n            dispatch(clearErrors());\n        }\n        if (isDeleted) {\n            enqueueSnackbar(\"Deleted Successfully\", { variant: \"success\" });\n            dispatch({ type: DELETE_ORDER_RESET });\n        }\n        dispatch(getAllOrders());\n    }, [dispatch, error, deleteError, isDeleted, enqueueSnackbar]);\n\n    const deleteOrderHandler = (id) => {\n        dispatch(deleteOrder(id));\n    }\n\n    const columns = [\n        {\n            field: \"id\",\n            headerName: \"Order ID\",\n            minWidth: 200,\n            flex: 1,\n        },\n        {\n            field: \"status\",\n            headerName: \"Status\",\n            minWidth: 150,\n            flex: 0.2,\n            renderCell: (params) => {\n                return (\n                    <>\n                        {\n                            params.row.status === \"Delivered\" ? (\n                                <span className=\"text-sm bg-green-100 p-1 px-2 font-medium rounded-full text-green-800\">{params.row.status}</span>\n                            ) : params.row.status === \"Shipped\" ? (\n                                <span className=\"text-sm bg-yellow-100 p-1 px-2 font-medium rounded-full text-yellow-800\">{params.row.status}</span>\n                            ) : (\n                                <span className=\"text-sm bg-purple-100 p-1 px-2 font-medium rounded-full text-purple-800\">{params.row.status}</span>\n                            )\n                        }\n                    </>\n                )\n            },\n        },\n        {\n            field: \"itemsQty\",\n            headerName: \"Items Qty\",\n            type: \"number\",\n            minWidth: 100,\n            flex: 0.1,\n        },\n        {\n            field: \"amount\",\n            headerName: \"Amount\",\n            type: \"number\",\n            minWidth: 200,\n            flex: 0.2,\n            renderCell: (params) => {\n                return (\n                    <span>₹{params.row.amount.toLocaleString()}</span>\n                );\n            },\n        },\n        {\n            field: \"orderOn\",\n            headerName: \"Order On\",\n            type: \"date\",\n            minWidth: 200,\n            flex: 0.5,\n        },\n        {\n            field: \"actions\",\n            headerName: \"Actions\",\n            minWidth: 100,\n            flex: 0.3,\n            type: \"number\",\n            sortable: false,\n            renderCell: (params) => {\n                return (\n                    <Actions editRoute={\"order\"} deleteHandler={deleteOrderHandler} id={params.row.id} />\n                );\n            },\n        },\n    ];\n\n    const rows = [];\n\n    orders && orders.forEach((order) => {\n        rows.unshift({\n            id: order._id,\n            itemsQty: order.orderItems.length,\n            amount: order.totalPrice,\n            orderOn: formatDate(order.createdAt),\n            status: order.orderStatus,\n        });\n    });\n\n    return (\n        <>\n            <MetaData title=\"Admin Orders | Flipkart\" />\n\n            {loading && <BackdropLoader />}\n\n            <h1 className=\"text-lg font-medium uppercase\">orders</h1>\n            <div className=\"bg-white rounded-xl shadow-lg w-full\" style={{ height: 470 }}>\n\n                <DataGrid\n                    rows={rows}\n                    columns={columns}\n                    pageSize={10}\n                    disableSelectIconOnClick\n                    sx={{\n                        boxShadow: 0,\n                        border: 0,\n                    }}\n                />\n            </div>\n        </>\n    );\n};\n\nexport default OrderTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}