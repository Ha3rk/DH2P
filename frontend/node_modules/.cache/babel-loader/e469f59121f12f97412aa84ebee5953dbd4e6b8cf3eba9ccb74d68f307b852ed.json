{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\E-web\\\\frontend\\\\src\\\\components\\\\Admin\\\\UserTable.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport { clearErrors, deleteUser, getAllUsers } from '../../actions/userAction';\nimport { DELETE_USER_RESET } from '../../constants/userConstants';\nimport Actions from './Actions';\nimport MetaData from '../Layouts/MetaData';\nimport BackdropLoader from '../Layouts/BackdropLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserTable = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    users,\n    error\n  } = useSelector(state => state.users);\n  const {\n    loading,\n    isDeleted,\n    error: deleteError\n  } = useSelector(state => state.profile);\n  useEffect(() => {\n    if (error) {\n      enqueueSnackbar(error, {\n        variant: \"error\"\n      });\n      dispatch(clearErrors());\n    }\n    if (deleteError) {\n      enqueueSnackbar(deleteError, {\n        variant: \"error\"\n      });\n      dispatch(clearErrors());\n    }\n    if (isDeleted) {\n      enqueueSnackbar(\"User Deleted Successfully\", {\n        variant: \"success\"\n      });\n      dispatch({\n        type: DELETE_USER_RESET\n      });\n    }\n    dispatch(getAllUsers());\n  }, [dispatch, error, deleteError, isDeleted, enqueueSnackbar]);\n  const deleteUserHandler = id => {\n    dispatch(deleteUser(id));\n  };\n  const columns = [{\n    field: \"name\",\n    headerName: \"Name\",\n    minWidth: 200,\n    flex: 1,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-10 h-10 rounded-full\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            draggable: \"false\",\n            src: params.row.avatar,\n            alt: params.row.name,\n            className: \"w-full h-full rounded-full object-cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), params.row.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this);\n    }\n  }, {\n    field: \"email\",\n    headerName: \"Email\",\n    minWidth: 200,\n    flex: 0.2\n  }, {\n    field: \"gender\",\n    headerName: \"Gender\",\n    minWidth: 100,\n    flex: 0.1\n  }, {\n    field: \"role\",\n    headerName: \"Role\",\n    minWidth: 100,\n    flex: 0.2,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: params.row.role === \"admin\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm bg-green-100 p-1 px-2 font-medium rounded-full text-green-800 capitalize\",\n          children: params.row.role\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm bg-purple-100 p-1 px-2 font-medium rounded-full text-purple-800 capitalize\",\n          children: params.row.role\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 33\n        }, this)\n      }, void 0, false);\n    }\n  }, {\n    field: \"registeredOn\",\n    headerName: \"Registered On\",\n    type: \"date\",\n    minWidth: 150,\n    flex: 0.2\n  }, {\n    field: \"actions\",\n    headerName: \"Actions\",\n    minWidth: 200,\n    flex: 0.3,\n    type: \"number\",\n    sortable: false,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(Actions, {\n        editRoute: \"user\",\n        deleteHandler: deleteUserHandler,\n        id: params.row.id,\n        name: params.row.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this);\n    }\n  }];\n  const rows = [];\n  users && users.forEach(item => {\n    rows.unshift({\n      id: item._id,\n      name: item.name,\n      avatar: item.avatar.url,\n      email: item.email,\n      gender: item.gender.toUpperCase(),\n      role: item.role,\n      registeredOn: new Date(item.createdAt).toISOString().substring(0, 10)\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: \"Admin Users | Flipkart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(BackdropLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-lg font-medium uppercase\",\n      children: \"users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-xl shadow-lg w-full\",\n      style: {\n        height: 470\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        pageSize: 10,\n        disableSelectIconOnClick: true,\n        sx: {\n          boxShadow: 0,\n          border: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(UserTable, \"+CPUBakY6KTQPksu/yA8yk9xJXo=\", false, function () {\n  return [useDispatch, useSnackbar, useSelector, useSelector];\n});\n_c = UserTable;\nexport default UserTable;\nvar _c;\n$RefreshReg$(_c, \"UserTable\");","map":{"version":3,"names":["useEffect","DataGrid","useDispatch","useSelector","useSnackbar","clearErrors","deleteUser","getAllUsers","DELETE_USER_RESET","Actions","MetaData","BackdropLoader","jsxDEV","_jsxDEV","Fragment","_Fragment","UserTable","_s","dispatch","enqueueSnackbar","users","error","state","loading","isDeleted","deleteError","profile","variant","type","deleteUserHandler","id","columns","field","headerName","minWidth","flex","renderCell","params","className","children","draggable","src","row","avatar","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","role","sortable","editRoute","deleteHandler","rows","forEach","item","unshift","_id","url","email","gender","toUpperCase","registeredOn","Date","createdAt","toISOString","substring","title","style","height","pageSize","disableSelectIconOnClick","sx","boxShadow","border","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/E-web/frontend/src/components/Admin/UserTable.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport { clearErrors, deleteUser, getAllUsers } from '../../actions/userAction';\nimport { DELETE_USER_RESET } from '../../constants/userConstants';\nimport Actions from './Actions';\nimport MetaData from '../Layouts/MetaData';\nimport BackdropLoader from '../Layouts/BackdropLoader';\n\nconst UserTable = () => {\n\n    const dispatch = useDispatch();\n    const { enqueueSnackbar } = useSnackbar();\n\n    const { users, error } = useSelector((state) => state.users);\n    const { loading, isDeleted, error: deleteError } = useSelector((state) => state.profile);\n\n    useEffect(() => {\n        if (error) {\n            enqueueSnackbar(error, { variant: \"error\" });\n            dispatch(clearErrors());\n        }\n        if (deleteError) {\n            enqueueSnackbar(deleteError, { variant: \"error\" });\n            dispatch(clearErrors());\n        }\n        if (isDeleted) {\n            enqueueSnackbar(\"User Deleted Successfully\", { variant: \"success\" });\n            dispatch({ type: DELETE_USER_RESET });\n        }\n        dispatch(getAllUsers());\n    }, [dispatch, error, deleteError, isDeleted, enqueueSnackbar]);\n\n    const deleteUserHandler = (id) => {\n        dispatch(deleteUser(id));\n    }\n\n    const columns = [\n        {\n            field: \"name\",\n            headerName: \"Name\",\n            minWidth: 200,\n            flex: 1,\n            renderCell: (params) => {\n                return (\n                    <div className=\"flex items-center gap-2\">\n                        <div className=\"w-10 h-10 rounded-full\">\n                            <img draggable=\"false\" src={params.row.avatar} alt={params.row.name} className=\"w-full h-full rounded-full object-cover\" />\n                        </div>\n                        {params.row.name}\n                    </div>\n                )\n            },\n        },\n        {\n            field: \"email\",\n            headerName: \"Email\",\n            minWidth: 200,\n            flex: 0.2,\n        },\n        {\n            field: \"gender\",\n            headerName: \"Gender\",\n            minWidth: 100,\n            flex: 0.1,\n        },\n        {\n            field: \"role\",\n            headerName: \"Role\",\n            minWidth: 100,\n            flex: 0.2,\n            renderCell: (params) => {\n                return (\n                    <>\n                        {\n                            params.row.role === \"admin\" ? (\n                                <span className=\"text-sm bg-green-100 p-1 px-2 font-medium rounded-full text-green-800 capitalize\">{params.row.role}</span>\n                            ) : (\n                                <span className=\"text-sm bg-purple-100 p-1 px-2 font-medium rounded-full text-purple-800 capitalize\">{params.row.role}</span>\n                            )\n                        }\n                    </>\n                )\n            },\n        },\n        {\n            field: \"registeredOn\",\n            headerName: \"Registered On\",\n            type: \"date\",\n            minWidth: 150,\n            flex: 0.2,\n        },\n        {\n            field: \"actions\",\n            headerName: \"Actions\",\n            minWidth: 200,\n            flex: 0.3,\n            type: \"number\",\n            sortable: false,\n            renderCell: (params) => {\n                return (\n                    <Actions editRoute={\"user\"} deleteHandler={deleteUserHandler} id={params.row.id} name={params.row.name} />\n                );\n            },\n        },\n    ];\n\n    const rows = [];\n\n    users && users.forEach((item) => {\n        rows.unshift({\n            id: item._id,\n            name: item.name,\n            avatar: item.avatar.url,\n            email: item.email,\n            gender: item.gender.toUpperCase(),\n            role: item.role,\n            registeredOn: new Date(item.createdAt).toISOString().substring(0, 10),\n        });\n    });\n\n    return (\n        <>\n            <MetaData title=\"Admin Users | Flipkart\" />\n\n            {loading && <BackdropLoader />}\n\n            <h1 className=\"text-lg font-medium uppercase\">users</h1>\n            <div className=\"bg-white rounded-xl shadow-lg w-full\" style={{ height: 470 }}>\n\n                <DataGrid\n                    rows={rows}\n                    columns={columns}\n                    pageSize={10}\n                    disableSelectIconOnClick\n                    sx={{\n                        boxShadow: 0,\n                        border: 0,\n                    }}\n                />\n            </div>\n        </>\n    );\n};\n\nexport default UserTable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}