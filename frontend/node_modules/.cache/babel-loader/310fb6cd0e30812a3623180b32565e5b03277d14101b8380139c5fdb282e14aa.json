{"ast":null,"code":"import axios from \"axios\";\nimport { ALL_ORDERS_FAIL, ALL_ORDERS_REQUEST, ALL_ORDERS_SUCCESS, CLEAR_ERRORS, DELETE_ORDER_FAIL, DELETE_ORDER_REQUEST, DELETE_ORDER_SUCCESS, MY_ORDERS_FAIL, MY_ORDERS_REQUEST, MY_ORDERS_SUCCESS, NEW_ORDER_FAIL, NEW_ORDER_REQUEST, NEW_ORDER_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, PAYMENT_STATUS_FAIL, PAYMENT_STATUS_REQUEST, PAYMENT_STATUS_SUCCESS, UPDATE_ORDER_FAIL, UPDATE_ORDER_REQUEST, UPDATE_ORDER_SUCCESS } from \"../constants/orderConstants\";\n\n// New Order\nexport const newOrder = order => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_ORDER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/v1/order/new', order, config);\n    dispatch({\n      type: NEW_ORDER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_ORDER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Get User Orders\nexport const myOrders = () => async dispatch => {\n  try {\n    dispatch({\n      type: MY_ORDERS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/v1/orders/me');\n    dispatch({\n      type: MY_ORDERS_SUCCESS,\n      payload: data.orders\n    });\n  } catch (error) {\n    dispatch({\n      type: MY_ORDERS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Get Order Details\nexport const getOrderDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/order/${id}`);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data.order\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Get Payment Status\nexport const getPaymentStatus = id => async dispatch => {\n  try {\n    dispatch({\n      type: PAYMENT_STATUS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/payment/status/${id}`);\n    dispatch({\n      type: PAYMENT_STATUS_SUCCESS,\n      payload: data.txn\n    });\n  } catch (error) {\n    dispatch({\n      type: PAYMENT_STATUS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Get All Orders ---ADMIN\nexport const getAllOrders = () => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_ORDERS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/v1/admin/orders');\n    dispatch({\n      type: ALL_ORDERS_SUCCESS,\n      payload: data.orders\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_ORDERS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Update Order ---ADMIN\nexport const updateOrder = (id, order) => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_ORDER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/admin/order/${id}`, order, config);\n    dispatch({\n      type: UPDATE_ORDER_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_ORDER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Delete Order ---ADMIN\nexport const deleteOrder = id => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_ORDER_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/v1/admin/order/${id}`);\n    dispatch({\n      type: DELETE_ORDER_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_ORDER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Clear All Errors\nexport const clearErrors = () => dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["axios","ALL_ORDERS_FAIL","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","CLEAR_ERRORS","DELETE_ORDER_FAIL","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","MY_ORDERS_FAIL","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","NEW_ORDER_FAIL","NEW_ORDER_REQUEST","NEW_ORDER_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","PAYMENT_STATUS_FAIL","PAYMENT_STATUS_REQUEST","PAYMENT_STATUS_SUCCESS","UPDATE_ORDER_FAIL","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","newOrder","order","dispatch","type","config","headers","data","post","payload","error","response","message","myOrders","get","orders","getOrderDetails","id","getPaymentStatus","txn","getAllOrders","updateOrder","put","success","deleteOrder","delete","clearErrors"],"sources":["C:/Users/User/Downloads/E-web/frontend/src/actions/orderAction.js"],"sourcesContent":["import axios from \"axios\";\nimport { ALL_ORDERS_FAIL, ALL_ORDERS_REQUEST, ALL_ORDERS_SUCCESS, CLEAR_ERRORS, DELETE_ORDER_FAIL, DELETE_ORDER_REQUEST, DELETE_ORDER_SUCCESS, MY_ORDERS_FAIL, MY_ORDERS_REQUEST, MY_ORDERS_SUCCESS, NEW_ORDER_FAIL, NEW_ORDER_REQUEST, NEW_ORDER_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, PAYMENT_STATUS_FAIL, PAYMENT_STATUS_REQUEST, PAYMENT_STATUS_SUCCESS, UPDATE_ORDER_FAIL, UPDATE_ORDER_REQUEST, UPDATE_ORDER_SUCCESS } from \"../constants/orderConstants\";\n\n// New Order\nexport const newOrder = (order) => async (dispatch) => {\n    try {\n        dispatch({ type: NEW_ORDER_REQUEST });\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        };\n\n        const { data } = await axios.post('/api/v1/order/new', order, config);\n\n        dispatch({\n            type: NEW_ORDER_SUCCESS,\n            payload: data,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_ORDER_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// Get User Orders\nexport const myOrders = () => async (dispatch) => {\n    try {\n        dispatch({ type: MY_ORDERS_REQUEST });\n\n        const { data } = await axios.get('/api/v1/orders/me');\n\n        dispatch({\n            type: MY_ORDERS_SUCCESS,\n            payload: data.orders,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: MY_ORDERS_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// Get Order Details\nexport const getOrderDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: ORDER_DETAILS_REQUEST });\n\n        const { data } = await axios.get(`/api/v1/order/${id}`);\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data.order,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// Get Payment Status\nexport const getPaymentStatus = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PAYMENT_STATUS_REQUEST });\n\n        const { data } = await axios.get(`/api/v1/payment/status/${id}`);\n\n        dispatch({\n            type: PAYMENT_STATUS_SUCCESS,\n            payload: data.txn,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PAYMENT_STATUS_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// Get All Orders ---ADMIN\nexport const getAllOrders = () => async (dispatch) => {\n    try {\n        dispatch({ type: ALL_ORDERS_REQUEST });\n\n        const { data } = await axios.get('/api/v1/admin/orders');\n\n        dispatch({\n            type: ALL_ORDERS_SUCCESS,\n            payload: data.orders,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_ORDERS_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// Update Order ---ADMIN\nexport const updateOrder = (id, order) => async (dispatch) => {\n    try {\n        dispatch({ type: UPDATE_ORDER_REQUEST });\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        };\n\n        const { data } = await axios.put(`/api/v1/admin/order/${id}`, order, config);\n\n        dispatch({\n            type: UPDATE_ORDER_SUCCESS,\n            payload: data.success,\n        });\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_ORDER_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// Delete Order ---ADMIN\nexport const deleteOrder = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: DELETE_ORDER_REQUEST });\n\n        const { data } = await axios.delete(`/api/v1/admin/order/${id}`);\n\n        dispatch({\n            type: DELETE_ORDER_SUCCESS,\n            payload: data.success,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_ORDER_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// Clear All Errors\nexport const clearErrors = () => (dispatch) => {\n    dispatch({ type: CLEAR_ERRORS });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}